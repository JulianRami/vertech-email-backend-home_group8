name: ci

on:
  push:
    branches:
      # - main
      - dev-diego

# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        env:
          FLASK_ENV: testing
          FLASK_APP: app.app
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      - name: Run tests with Pytest
        run: pytest -vv --junit-xml=test-results.xml
      - name: Surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          path: ./test-results.xml

  # build-and-push-image:
  #   needs: test
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
      
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #         # Use Git tags as Docker tags
  #         tags: |
  #           type=ref,event=tag
  #           type=semver,pattern={{version}}
  #           type=sha

  #     - name: Set Flask environment variables
  #       run: |
  #           echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
  #           echo "FRONTED_URL=${{ secrets.FRONTED_URL }}" >> .env
  #           echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
  #           echo "FLASK_ENV=${{ secrets.FLASK_ENV }}" >> .env
  #           echo "FLASK_APP=${{ secrets.FLASK_APP }}" >> .env
  #       env:
  #         JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
  #         FRONTED_URL: ${{ secrets.FRONTED_URL }}
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #         FLASK_ENV: ${{ secrets.FLASK_ENV }}
  #         FLASK_APP: ${{ secrets.FLASK_APP}}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
