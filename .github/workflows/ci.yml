name: ci

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    # only run this job if the push is to the original repository
    if: github.repository == 'TechFellowGroup8/vertech-email-backend'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Use Git tags as Docker tags
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=sha

      - name: Set Flask environment variables
        run: |
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
            echo "FRONTED_URL=${{ secrets.FRONTED_URL }}" >> .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "FLASK_ENV=${{ secrets.FLASK_ENV }}" >> .env
            echo "FLASK_APP=${{ secrets.FLASK_APP }}" >> .env
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          FRONTED_URL: ${{ secrets.FRONTED_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          FLASK_ENV: ${{ secrets.FLASK_ENV }}
          FLASK_APP: ${{ secrets.FLASK_APP}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}